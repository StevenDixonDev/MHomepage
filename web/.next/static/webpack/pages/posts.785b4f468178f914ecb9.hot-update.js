webpackHotUpdate_N_E("pages/posts",{

/***/ "./node_modules/next/node_modules/css-loader/dist/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/index.js?!./node_modules/resolve-url-loader/index.js?!./node_modules/sass-loader/dist/cjs.js?!./Components/PostPreviewItem.module.scss":
/*!**********************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/node_modules/css-loader/dist/cjs.js??ref--5-oneOf-3-1!./node_modules/next/dist/compiled/postcss-loader??__nextjs_postcss!./node_modules/resolve-url-loader??ref--5-oneOf-3-3!./node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-3-4!./Components/PostPreviewItem.module.scss ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../node_modules/next/node_modules/css-loader/dist/runtime/api.js */ "./node_modules/next/node_modules/css-loader/dist/runtime/api.js");
exports = ___CSS_LOADER_API_IMPORT___(true);
// Module
exports.push([module.i, ".PostPreviewItem_preview_item__20Jch {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1.5em;\n  cursor: pointer;\n}\n\n.PostPreviewItem_article_wrapper__4NjLH {\n  margin: 1em 0 0 0;\n}\n\n.PostPreviewItem_preview_date__3JE0Q {\n  font-size: 1em;\n  color: #a3a7ad;\n}\n\n.PostPreviewItem_preview_image__fMqs0 {\n  height: 240px;\n  width: 100%;\n}\n\n.PostPreviewItem_preview_title__3NcFi:hover {\n  text-decoration: underline;\n}\n\n.PostPreviewItem_preview_excerpt__muy2X {\n  font-size: 1.1em;\n}\n\n@media screen and (min-width: 880px) {\n  .PostPreviewItem_preview_item__20Jch {\n    flex-direction: row;\n  }\n\n  .PostPreviewItem_article_wrapper__4NjLH {\n    margin: 0 0 0 1em;\n  }\n\n  .PostPreviewItem_preview_image__fMqs0 {\n    height: auto;\n    width: 30%;\n  }\n}", "",{"version":3,"sources":["C:/Users/StevenDev/Documents/git/Mhomepage/web/Components/PostPreviewItem.module.scss"],"names":[],"mappings":"AAAA;EACE,aAAA;EACA,sBAAA;EACA,oBAAA;EACA,eAAA;AACF;;AAEA;EACE,iBAAA;AACF;;AAEA;EACE,cAAA;EACA,cAAA;AACF;;AAEA;EACE,aAAA;EACA,WAAA;AACF;;AAGE;EACE,0BAAA;AAAJ;;AAIA;EACE,gBAAA;AADF;;AAIA;EACE;IACE,mBAAA;EADF;;EAGA;IACE,iBAAA;EAAF;;EAEA;IACE,YAAA;IACA,UAAA;EACF;AACF","file":"PostPreviewItem.module.scss","sourcesContent":[".preview_item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 1.5em;\r\n  cursor: pointer;\r\n}\r\n\r\n.article_wrapper {\r\n  margin: 1em 0 0 0;\r\n}\r\n\r\n.preview_date {\r\n  font-size: 1em;\r\n  color: #a3a7ad;\r\n}\r\n\r\n.preview_image {\r\n  height: 240px;\r\n  width: 100%;\r\n}\r\n\r\n.preview_title {\r\n  &:hover{\r\n    text-decoration: underline;\r\n  }\r\n}\r\n\r\n.preview_excerpt {\r\n  font-size: 1.1em;\r\n}\r\n\r\n@media screen and (min-width: 880px){\r\n  .preview_item {\r\n    flex-direction: row;\r\n  }\r\n  .article_wrapper {\r\n    margin: 0 0 0 1em;\r\n  }\r\n  .preview_image {\r\n    height: auto;\r\n    width: 30%;\r\n  }\r\n}"]}]);
// Exports
exports.locals = {
	"preview_item": "PostPreviewItem_preview_item__20Jch",
	"article_wrapper": "PostPreviewItem_article_wrapper__4NjLH",
	"preview_date": "PostPreviewItem_preview_date__3JE0Q",
	"preview_image": "PostPreviewItem_preview_image__fMqs0",
	"preview_title": "PostPreviewItem_preview_title__3NcFi",
	"preview_excerpt": "PostPreviewItem_preview_excerpt__muy2X"
};
module.exports = exports;


/***/ })

})
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vQ29tcG9uZW50cy9Qb3N0UHJldmlld0l0ZW0ubW9kdWxlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQSxrQ0FBa0MsbUJBQU8sQ0FBQyx5SUFBa0U7QUFDNUc7QUFDQTtBQUNBLGNBQWMsUUFBUyx5Q0FBeUMsa0JBQWtCLDJCQUEyQix5QkFBeUIsb0JBQW9CLEdBQUcsNkNBQTZDLHNCQUFzQixHQUFHLDBDQUEwQyxtQkFBbUIsbUJBQW1CLEdBQUcsMkNBQTJDLGtCQUFrQixnQkFBZ0IsR0FBRyxpREFBaUQsK0JBQStCLEdBQUcsNkNBQTZDLHFCQUFxQixHQUFHLDBDQUEwQywwQ0FBMEMsMEJBQTBCLEtBQUssK0NBQStDLHdCQUF3QixLQUFLLDZDQUE2QyxtQkFBbUIsaUJBQWlCLEtBQUssR0FBRyxPQUFPLDRJQUE0SSxVQUFVLFdBQVcsV0FBVyxVQUFVLE1BQU0sS0FBSyxXQUFXLE1BQU0sS0FBSyxVQUFVLFVBQVUsTUFBTSxLQUFLLFVBQVUsVUFBVSxNQUFNLEtBQUssV0FBVyxNQUFNLEtBQUssV0FBVyxNQUFNLEtBQUssS0FBSyxXQUFXLE1BQU0sS0FBSyxXQUFXLE1BQU0sS0FBSyxVQUFVLFVBQVUsS0FBSyw2RUFBNkUsb0JBQW9CLDZCQUE2QiwyQkFBMkIsc0JBQXNCLEtBQUssMEJBQTBCLHdCQUF3QixLQUFLLHVCQUF1QixxQkFBcUIscUJBQXFCLEtBQUssd0JBQXdCLG9CQUFvQixrQkFBa0IsS0FBSyx3QkFBd0IsY0FBYyxtQ0FBbUMsT0FBTyxLQUFLLDBCQUEwQix1QkFBdUIsS0FBSyw2Q0FBNkMscUJBQXFCLDRCQUE0QixPQUFPLHdCQUF3QiwwQkFBMEIsT0FBTyxzQkFBc0IscUJBQXFCLG1CQUFtQixPQUFPLEtBQUssR0FBRztBQUNsN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoic3RhdGljL3dlYnBhY2svcGFnZXMvcG9zdHMuNzg1YjRmNDY4MTc4ZjkxNGVjYjkuaG90LXVwZGF0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKTtcbmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18odHJ1ZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5Qb3N0UHJldmlld0l0ZW1fcHJldmlld19pdGVtX18yMEpjaCB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIG1hcmdpbi1ib3R0b206IDEuNWVtO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uUG9zdFByZXZpZXdJdGVtX2FydGljbGVfd3JhcHBlcl9fNE5qTEgge1xcbiAgbWFyZ2luOiAxZW0gMCAwIDA7XFxufVxcblxcbi5Qb3N0UHJldmlld0l0ZW1fcHJldmlld19kYXRlX18zSkUwUSB7XFxuICBmb250LXNpemU6IDFlbTtcXG4gIGNvbG9yOiAjYTNhN2FkO1xcbn1cXG5cXG4uUG9zdFByZXZpZXdJdGVtX3ByZXZpZXdfaW1hZ2VfX2ZNcXMwIHtcXG4gIGhlaWdodDogMjQwcHg7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuXFxuLlBvc3RQcmV2aWV3SXRlbV9wcmV2aWV3X3RpdGxlX18zTmNGaTpob3ZlciB7XFxuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcXG59XFxuXFxuLlBvc3RQcmV2aWV3SXRlbV9wcmV2aWV3X2V4Y2VycHRfX211eTJYIHtcXG4gIGZvbnQtc2l6ZTogMS4xZW07XFxufVxcblxcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDg4MHB4KSB7XFxuICAuUG9zdFByZXZpZXdJdGVtX3ByZXZpZXdfaXRlbV9fMjBKY2gge1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgfVxcblxcbiAgLlBvc3RQcmV2aWV3SXRlbV9hcnRpY2xlX3dyYXBwZXJfXzROakxIIHtcXG4gICAgbWFyZ2luOiAwIDAgMCAxZW07XFxuICB9XFxuXFxuICAuUG9zdFByZXZpZXdJdGVtX3ByZXZpZXdfaW1hZ2VfX2ZNcXMwIHtcXG4gICAgaGVpZ2h0OiBhdXRvO1xcbiAgICB3aWR0aDogMzAlO1xcbiAgfVxcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJDOi9Vc2Vycy9TdGV2ZW5EZXYvRG9jdW1lbnRzL2dpdC9NaG9tZXBhZ2Uvd2ViL0NvbXBvbmVudHMvUG9zdFByZXZpZXdJdGVtLm1vZHVsZS5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0Esb0JBQUE7RUFDQSxlQUFBO0FBQ0Y7O0FBRUE7RUFDRSxpQkFBQTtBQUNGOztBQUVBO0VBQ0UsY0FBQTtFQUNBLGNBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7RUFDQSxXQUFBO0FBQ0Y7O0FBR0U7RUFDRSwwQkFBQTtBQUFKOztBQUlBO0VBQ0UsZ0JBQUE7QUFERjs7QUFJQTtFQUNFO0lBQ0UsbUJBQUE7RUFERjs7RUFHQTtJQUNFLGlCQUFBO0VBQUY7O0VBRUE7SUFDRSxZQUFBO0lBQ0EsVUFBQTtFQUNGO0FBQ0ZcIixcImZpbGVcIjpcIlBvc3RQcmV2aWV3SXRlbS5tb2R1bGUuc2Nzc1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCIucHJldmlld19pdGVtIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgbWFyZ2luLWJvdHRvbTogMS41ZW07XFxyXFxuICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxufVxcclxcblxcclxcbi5hcnRpY2xlX3dyYXBwZXIge1xcclxcbiAgbWFyZ2luOiAxZW0gMCAwIDA7XFxyXFxufVxcclxcblxcclxcbi5wcmV2aWV3X2RhdGUge1xcclxcbiAgZm9udC1zaXplOiAxZW07XFxyXFxuICBjb2xvcjogI2EzYTdhZDtcXHJcXG59XFxyXFxuXFxyXFxuLnByZXZpZXdfaW1hZ2Uge1xcclxcbiAgaGVpZ2h0OiAyNDBweDtcXHJcXG4gIHdpZHRoOiAxMDAlO1xcclxcbn1cXHJcXG5cXHJcXG4ucHJldmlld190aXRsZSB7XFxyXFxuICAmOmhvdmVye1xcclxcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcXHJcXG4gIH1cXHJcXG59XFxyXFxuXFxyXFxuLnByZXZpZXdfZXhjZXJwdCB7XFxyXFxuICBmb250LXNpemU6IDEuMWVtO1xcclxcbn1cXHJcXG5cXHJcXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA4ODBweCl7XFxyXFxuICAucHJldmlld19pdGVtIHtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXHJcXG4gIH1cXHJcXG4gIC5hcnRpY2xlX3dyYXBwZXIge1xcclxcbiAgICBtYXJnaW46IDAgMCAwIDFlbTtcXHJcXG4gIH1cXHJcXG4gIC5wcmV2aWV3X2ltYWdlIHtcXHJcXG4gICAgaGVpZ2h0OiBhdXRvO1xcclxcbiAgICB3aWR0aDogMzAlO1xcclxcbiAgfVxcclxcbn1cIl19XSk7XG4vLyBFeHBvcnRzXG5leHBvcnRzLmxvY2FscyA9IHtcblx0XCJwcmV2aWV3X2l0ZW1cIjogXCJQb3N0UHJldmlld0l0ZW1fcHJldmlld19pdGVtX18yMEpjaFwiLFxuXHRcImFydGljbGVfd3JhcHBlclwiOiBcIlBvc3RQcmV2aWV3SXRlbV9hcnRpY2xlX3dyYXBwZXJfXzROakxIXCIsXG5cdFwicHJldmlld19kYXRlXCI6IFwiUG9zdFByZXZpZXdJdGVtX3ByZXZpZXdfZGF0ZV9fM0pFMFFcIixcblx0XCJwcmV2aWV3X2ltYWdlXCI6IFwiUG9zdFByZXZpZXdJdGVtX3ByZXZpZXdfaW1hZ2VfX2ZNcXMwXCIsXG5cdFwicHJldmlld190aXRsZVwiOiBcIlBvc3RQcmV2aWV3SXRlbV9wcmV2aWV3X3RpdGxlX18zTmNGaVwiLFxuXHRcInByZXZpZXdfZXhjZXJwdFwiOiBcIlBvc3RQcmV2aWV3SXRlbV9wcmV2aWV3X2V4Y2VycHRfX211eTJYXCJcbn07XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHM7XG4iXSwic291cmNlUm9vdCI6IiJ9