webpackHotUpdate_N_E("pages/posts",{

/***/ "./node_modules/next/node_modules/css-loader/dist/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/index.js?!./node_modules/resolve-url-loader/index.js?!./node_modules/sass-loader/dist/cjs.js?!./Components/PostPreviewItem.module.scss":
/*!**********************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/node_modules/css-loader/dist/cjs.js??ref--5-oneOf-3-1!./node_modules/next/dist/compiled/postcss-loader??__nextjs_postcss!./node_modules/resolve-url-loader??ref--5-oneOf-3-3!./node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-3-4!./Components/PostPreviewItem.module.scss ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../node_modules/next/node_modules/css-loader/dist/runtime/api.js */ "./node_modules/next/node_modules/css-loader/dist/runtime/api.js");
exports = ___CSS_LOADER_API_IMPORT___(true);
// Module
exports.push([module.i, ".PostPreviewItem_preview_item__20Jch {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1.5em;\n  cursor: pointer;\n}\n\n.PostPreviewItem_article_wrapper__4NjLH {\n  margin: 1em 0 0 0;\n}\n\n.PostPreviewItem_preview_date__3JE0Q {\n  font-size: 1em;\n  color: #a3a7ad;\n}\n\n.PostPreviewItem_preview_image__fMqs0 {\n  height: 240px;\n  width: 100%;\n}\n\n.PostPreviewItem_preview_title__3NcFi:hover {\n  text-decoration: underline;\n}\n\n.PostPreviewItem_preview_excerpt__muy2X {\n  font-size: 1.1em;\n}\n\n@media screen and (min-width: 880px) {\n  .PostPreviewItem_preview_item__20Jch {\n    flex-direction: row;\n  }\n\n  .PostPreviewItem_article_wrapper__4NjLH {\n    margin: 0 0 0 1em;\n  }\n\n  .PostPreviewItem_preview_image__fMqs0 {\n    height: 100px;\n    width: 30%;\n  }\n}", "",{"version":3,"sources":["C:/Users/StevenDev/Documents/git/Mhomepage/web/Components/PostPreviewItem.module.scss"],"names":[],"mappings":"AAAA;EACE,aAAA;EACA,sBAAA;EACA,oBAAA;EACA,eAAA;AACF;;AAEA;EACE,iBAAA;AACF;;AAEA;EACE,cAAA;EACA,cAAA;AACF;;AAEA;EACE,aAAA;EACA,WAAA;AACF;;AAGE;EACE,0BAAA;AAAJ;;AAIA;EACE,gBAAA;AADF;;AAIA;EACE;IACE,mBAAA;EADF;;EAGA;IACE,iBAAA;EAAF;;EAEA;IACE,aAAA;IACA,UAAA;EACF;AACF","file":"PostPreviewItem.module.scss","sourcesContent":[".preview_item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 1.5em;\r\n  cursor: pointer;\r\n}\r\n\r\n.article_wrapper {\r\n  margin: 1em 0 0 0;\r\n}\r\n\r\n.preview_date {\r\n  font-size: 1em;\r\n  color: #a3a7ad;\r\n}\r\n\r\n.preview_image {\r\n  height: 240px;\r\n  width: 100%;\r\n}\r\n\r\n.preview_title {\r\n  &:hover{\r\n    text-decoration: underline;\r\n  }\r\n}\r\n\r\n.preview_excerpt {\r\n  font-size: 1.1em;\r\n}\r\n\r\n@media screen and (min-width: 880px){\r\n  .preview_item {\r\n    flex-direction: row;\r\n  }\r\n  .article_wrapper {\r\n    margin: 0 0 0 1em;\r\n  }\r\n  .preview_image {\r\n    height: 100px;\r\n    width: 30%;\r\n  }\r\n}"]}]);
// Exports
exports.locals = {
	"preview_item": "PostPreviewItem_preview_item__20Jch",
	"article_wrapper": "PostPreviewItem_article_wrapper__4NjLH",
	"preview_date": "PostPreviewItem_preview_date__3JE0Q",
	"preview_image": "PostPreviewItem_preview_image__fMqs0",
	"preview_title": "PostPreviewItem_preview_title__3NcFi",
	"preview_excerpt": "PostPreviewItem_preview_excerpt__muy2X"
};
module.exports = exports;


/***/ })

})
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vQ29tcG9uZW50cy9Qb3N0UHJldmlld0l0ZW0ubW9kdWxlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQSxrQ0FBa0MsbUJBQU8sQ0FBQyx5SUFBa0U7QUFDNUc7QUFDQTtBQUNBLGNBQWMsUUFBUyx5Q0FBeUMsa0JBQWtCLDJCQUEyQix5QkFBeUIsb0JBQW9CLEdBQUcsNkNBQTZDLHNCQUFzQixHQUFHLDBDQUEwQyxtQkFBbUIsbUJBQW1CLEdBQUcsMkNBQTJDLGtCQUFrQixnQkFBZ0IsR0FBRyxpREFBaUQsK0JBQStCLEdBQUcsNkNBQTZDLHFCQUFxQixHQUFHLDBDQUEwQywwQ0FBMEMsMEJBQTBCLEtBQUssK0NBQStDLHdCQUF3QixLQUFLLDZDQUE2QyxvQkFBb0IsaUJBQWlCLEtBQUssR0FBRyxPQUFPLDRJQUE0SSxVQUFVLFdBQVcsV0FBVyxVQUFVLE1BQU0sS0FBSyxXQUFXLE1BQU0sS0FBSyxVQUFVLFVBQVUsTUFBTSxLQUFLLFVBQVUsVUFBVSxNQUFNLEtBQUssV0FBVyxNQUFNLEtBQUssV0FBVyxNQUFNLEtBQUssS0FBSyxXQUFXLE1BQU0sS0FBSyxXQUFXLE1BQU0sS0FBSyxVQUFVLFVBQVUsS0FBSyw2RUFBNkUsb0JBQW9CLDZCQUE2QiwyQkFBMkIsc0JBQXNCLEtBQUssMEJBQTBCLHdCQUF3QixLQUFLLHVCQUF1QixxQkFBcUIscUJBQXFCLEtBQUssd0JBQXdCLG9CQUFvQixrQkFBa0IsS0FBSyx3QkFBd0IsY0FBYyxtQ0FBbUMsT0FBTyxLQUFLLDBCQUEwQix1QkFBdUIsS0FBSyw2Q0FBNkMscUJBQXFCLDRCQUE0QixPQUFPLHdCQUF3QiwwQkFBMEIsT0FBTyxzQkFBc0Isc0JBQXNCLG1CQUFtQixPQUFPLEtBQUssR0FBRztBQUNwN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoic3RhdGljL3dlYnBhY2svcGFnZXMvcG9zdHMuOWEzOTA1MTYwYmI1ZDBjMzY3NjcuaG90LXVwZGF0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKTtcbmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18odHJ1ZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5Qb3N0UHJldmlld0l0ZW1fcHJldmlld19pdGVtX18yMEpjaCB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIG1hcmdpbi1ib3R0b206IDEuNWVtO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uUG9zdFByZXZpZXdJdGVtX2FydGljbGVfd3JhcHBlcl9fNE5qTEgge1xcbiAgbWFyZ2luOiAxZW0gMCAwIDA7XFxufVxcblxcbi5Qb3N0UHJldmlld0l0ZW1fcHJldmlld19kYXRlX18zSkUwUSB7XFxuICBmb250LXNpemU6IDFlbTtcXG4gIGNvbG9yOiAjYTNhN2FkO1xcbn1cXG5cXG4uUG9zdFByZXZpZXdJdGVtX3ByZXZpZXdfaW1hZ2VfX2ZNcXMwIHtcXG4gIGhlaWdodDogMjQwcHg7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuXFxuLlBvc3RQcmV2aWV3SXRlbV9wcmV2aWV3X3RpdGxlX18zTmNGaTpob3ZlciB7XFxuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcXG59XFxuXFxuLlBvc3RQcmV2aWV3SXRlbV9wcmV2aWV3X2V4Y2VycHRfX211eTJYIHtcXG4gIGZvbnQtc2l6ZTogMS4xZW07XFxufVxcblxcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDg4MHB4KSB7XFxuICAuUG9zdFByZXZpZXdJdGVtX3ByZXZpZXdfaXRlbV9fMjBKY2gge1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgfVxcblxcbiAgLlBvc3RQcmV2aWV3SXRlbV9hcnRpY2xlX3dyYXBwZXJfXzROakxIIHtcXG4gICAgbWFyZ2luOiAwIDAgMCAxZW07XFxuICB9XFxuXFxuICAuUG9zdFByZXZpZXdJdGVtX3ByZXZpZXdfaW1hZ2VfX2ZNcXMwIHtcXG4gICAgaGVpZ2h0OiAxMDBweDtcXG4gICAgd2lkdGg6IDMwJTtcXG4gIH1cXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wiQzovVXNlcnMvU3RldmVuRGV2L0RvY3VtZW50cy9naXQvTWhvbWVwYWdlL3dlYi9Db21wb25lbnRzL1Bvc3RQcmV2aWV3SXRlbS5tb2R1bGUuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtFQUNBLG9CQUFBO0VBQ0EsZUFBQTtBQUNGOztBQUVBO0VBQ0UsaUJBQUE7QUFDRjs7QUFFQTtFQUNFLGNBQUE7RUFDQSxjQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0EsV0FBQTtBQUNGOztBQUdFO0VBQ0UsMEJBQUE7QUFBSjs7QUFJQTtFQUNFLGdCQUFBO0FBREY7O0FBSUE7RUFDRTtJQUNFLG1CQUFBO0VBREY7O0VBR0E7SUFDRSxpQkFBQTtFQUFGOztFQUVBO0lBQ0UsYUFBQTtJQUNBLFVBQUE7RUFDRjtBQUNGXCIsXCJmaWxlXCI6XCJQb3N0UHJldmlld0l0ZW0ubW9kdWxlLnNjc3NcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLnByZXZpZXdfaXRlbSB7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gIG1hcmdpbi1ib3R0b206IDEuNWVtO1xcclxcbiAgY3Vyc29yOiBwb2ludGVyO1xcclxcbn1cXHJcXG5cXHJcXG4uYXJ0aWNsZV93cmFwcGVyIHtcXHJcXG4gIG1hcmdpbjogMWVtIDAgMCAwO1xcclxcbn1cXHJcXG5cXHJcXG4ucHJldmlld19kYXRlIHtcXHJcXG4gIGZvbnQtc2l6ZTogMWVtO1xcclxcbiAgY29sb3I6ICNhM2E3YWQ7XFxyXFxufVxcclxcblxcclxcbi5wcmV2aWV3X2ltYWdlIHtcXHJcXG4gIGhlaWdodDogMjQwcHg7XFxyXFxuICB3aWR0aDogMTAwJTtcXHJcXG59XFxyXFxuXFxyXFxuLnByZXZpZXdfdGl0bGUge1xcclxcbiAgJjpob3ZlcntcXHJcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XFxyXFxuICB9XFxyXFxufVxcclxcblxcclxcbi5wcmV2aWV3X2V4Y2VycHQge1xcclxcbiAgZm9udC1zaXplOiAxLjFlbTtcXHJcXG59XFxyXFxuXFxyXFxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogODgwcHgpe1xcclxcbiAgLnByZXZpZXdfaXRlbSB7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxyXFxuICB9XFxyXFxuICAuYXJ0aWNsZV93cmFwcGVyIHtcXHJcXG4gICAgbWFyZ2luOiAwIDAgMCAxZW07XFxyXFxuICB9XFxyXFxuICAucHJldmlld19pbWFnZSB7XFxyXFxuICAgIGhlaWdodDogMTAwcHg7XFxyXFxuICAgIHdpZHRoOiAzMCU7XFxyXFxuICB9XFxyXFxufVwiXX1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcInByZXZpZXdfaXRlbVwiOiBcIlBvc3RQcmV2aWV3SXRlbV9wcmV2aWV3X2l0ZW1fXzIwSmNoXCIsXG5cdFwiYXJ0aWNsZV93cmFwcGVyXCI6IFwiUG9zdFByZXZpZXdJdGVtX2FydGljbGVfd3JhcHBlcl9fNE5qTEhcIixcblx0XCJwcmV2aWV3X2RhdGVcIjogXCJQb3N0UHJldmlld0l0ZW1fcHJldmlld19kYXRlX18zSkUwUVwiLFxuXHRcInByZXZpZXdfaW1hZ2VcIjogXCJQb3N0UHJldmlld0l0ZW1fcHJldmlld19pbWFnZV9fZk1xczBcIixcblx0XCJwcmV2aWV3X3RpdGxlXCI6IFwiUG9zdFByZXZpZXdJdGVtX3ByZXZpZXdfdGl0bGVfXzNOY0ZpXCIsXG5cdFwicHJldmlld19leGNlcnB0XCI6IFwiUG9zdFByZXZpZXdJdGVtX3ByZXZpZXdfZXhjZXJwdF9fbXV5MlhcIlxufTtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cztcbiJdLCJzb3VyY2VSb290IjoiIn0=