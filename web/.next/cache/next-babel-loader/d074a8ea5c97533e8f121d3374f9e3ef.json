{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\StevenDev\\\\Documents\\\\git\\\\Mhomepage\\\\web\\\\pages\\\\posts.jsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../Components/Layout';\nimport client from '../client';\n\nvar Post = function Post(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 3\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 3\n    }\n  }, props.slug.current));\n};\n\n_c = Post;\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var _context$query$pid, pid;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context$query$pid = context.query.pid, pid = _context$query$pid === void 0 ? \"\" : _context$query$pid;\n            _context.next = 3;\n            return client.fetch('*[_type == \"post\" && slug.current == $pid][0]', {\n              slug\n            });\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/StevenDev/Documents/git/Mhomepage/web/pages/posts.jsx"],"names":["Layout","client","Post","props","slug","current","getInitialProps","context","query","pid","fetch"],"mappings":";;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD;AAAA,SACX,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,KAAK,CAACC,IAAN,CAAWC,OAAf,CADA,CADW;AAAA,CAAb;;KAAMH,I;;AAMNA,IAAI,CAACI,eAAL;AAAA,sEAAuB,iBAAeC,OAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iCACHA,OAAO,CAACC,KADL,CACfC,GADe,EACfA,GADe,mCACT,EADS;AAAA;AAAA,mBAERR,MAAM,CAACS,KAAP,CACX,+CADW,EACsC;AAACN,cAAAA;AAAD,aADtC,CAFQ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAeF,IAAf","sourcesContent":["import Layout from '../Components/Layout';\r\nimport client from '../client';\r\n\r\nconst Post = (props) => (\r\n  <Layout>\r\n  <p>{props.slug.current}</p>\r\n  </Layout>\r\n)\r\n\r\nPost.getInitialProps = async function(context) {\r\n  const{pid = \"\"} = context.query;\r\n  return await client.fetch(\r\n    '*[_type == \"post\" && slug.current == $pid][0]', {slug})  \r\n}\r\n\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}