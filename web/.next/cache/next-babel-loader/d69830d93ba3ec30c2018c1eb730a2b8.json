{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\StevenDev\\\\Documents\\\\git\\\\Mhomepage\\\\web\\\\pages\\\\posts\\\\[pid].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport client from '../../client';\nimport Layout from '../../Components/Layout';\nimport BlockContent from '@sanity/block-content-to-react';\n\nvar Post = function Post(_ref) {\n  _s();\n\n  var data = _ref.data;\n  var router = useRouter();\n  var pid = router.query.pid;\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 1\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 1\n    }\n  }, \"Title: \", data.title), __jsx(BlockContent, _extends({\n    blocks: data.body,\n    imageOptions: {\n      w: 320,\n      h: 240,\n      fit: 'max'\n    }\n  }, client.config, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 1\n    }\n  })));\n};\n\n_s(Post, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Post;\nexport var __N_SSP = true;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/StevenDev/Documents/git/Mhomepage/web/pages/posts/[pid].js"],"names":["useRouter","client","Layout","BlockContent","Post","data","router","pid","query","title","body","w","h","fit","config"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAY;AAAA;;AAAA,MAAVC,IAAU,QAAVA,IAAU;AACvB,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AADuB,MAEfO,GAFe,GAEPD,MAAM,CAACE,KAFA,CAEfD,GAFe;AAIzB,SACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWF,IAAI,CAACI,KAAhB,CADA,EAEA,MAAC,YAAD;AACE,IAAA,MAAM,EAAIJ,IAAI,CAACK,IADjB;AAEE,IAAA,YAAY,EAAE;AAACC,MAAAA,CAAC,EAAE,GAAJ;AAASC,MAAAA,CAAC,EAAC,GAAX;AAAgBC,MAAAA,GAAG,EAAE;AAArB;AAFhB,KAGMZ,MAAM,CAACa,MAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFA,CADA;AAUC,CAdD;;GAAMV,I;UACWJ,S;;;KADXI,I;;AAkCN,eAAeA,IAAf","sourcesContent":["import { useRouter } from 'next/router';\r\nimport client from '../../client';\r\nimport Layout from '../../Components/Layout';\r\nimport BlockContent from '@sanity/block-content-to-react';\r\nimport groq from 'groq';\r\n\r\nconst Post = ({data}) => {\r\n  const router = useRouter()\r\n  const { pid } = router.query\r\n\r\nreturn (\r\n<Layout>\r\n<p>Title: {data.title}</p>\r\n<BlockContent\r\n  blocks = {data.body}\r\n  imageOptions={{w: 320, h:240, fit: 'max'}}\r\n  {...client.config}\r\n  />\r\n</Layout>\r\n)\r\n}\r\n\r\nconst query = groq`*[_type == \"post\" && slug.current == $pid][0]{\r\n  title,\r\n  \"name\": author ->name,\r\n  \"categories\": categories[] -> title,\r\n  \"authorImage\": author->image,\r\n  body\r\n} `\r\n\r\nexport async function getServerSideProps(context) {\r\n  const{ pid = \"\" } = context.query;\r\n  const data =  await client.fetch(\r\n    query, {pid})  \r\n\r\n  return {props: {data}}\r\n}\r\n\r\n\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}