{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\StevenDev\\\\Documents\\\\git\\\\Mhomepage\\\\web\\\\pages\\\\posts\\\\[pid].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useRouter } from 'next/router';\nimport client from '../../client';\nimport Layout from '../../Components/Layout';\nimport BlockContent from '@sanity/block-content-to-react';\nimport groq from 'groq';\n\nconst Post = ({\n  data\n}) => {\n  const router = useRouter();\n  const {\n    pid\n  } = router.query;\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 1\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 1\n    }\n  }, \"Title: \", data.title), __jsx(BlockContent, _extends({\n    blocks: data.body,\n    imageOptions: {\n      w: 320,\n      h: 240,\n      fit: 'max'\n    }\n  }, client.config, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 1\n    }\n  })));\n};\n\nexport async function getServerSideProps(context) {\n  const {\n    pid = \"\"\n  } = context.query;\n  const data = await client.fetch('*[_type == \"post\" && slug.current == $pid][0]', {\n    pid\n  });\n  return {\n    props: {\n      data\n    }\n  };\n}\nexport default Post;","map":{"version":3,"sources":["C:/Users/StevenDev/Documents/git/Mhomepage/web/pages/posts/[pid].js"],"names":["useRouter","client","Layout","BlockContent","groq","Post","data","router","pid","query","title","body","w","h","fit","config","getServerSideProps","context","fetch","props"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AACvB,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAUD,MAAM,CAACE,KAAvB;AAEF,SACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWH,IAAI,CAACI,KAAhB,CADA,EAEA,MAAC,YAAD;AACE,IAAA,MAAM,EAAIJ,IAAI,CAACK,IADjB;AAEE,IAAA,YAAY,EAAE;AAACC,MAAAA,CAAC,EAAE,GAAJ;AAASC,MAAAA,CAAC,EAAC,GAAX;AAAgBC,MAAAA,GAAG,EAAE;AAArB;AAFhB,KAGMb,MAAM,CAACc,MAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFA,CADA;AAUC,CAdD;;AAgBA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAChD,QAAK;AAAET,IAAAA,GAAG,GAAG;AAAR,MAAeS,OAAO,CAACR,KAA5B;AACA,QAAMH,IAAI,GAAI,MAAML,MAAM,CAACiB,KAAP,CAClB,+CADkB,EAC+B;AAACV,IAAAA;AAAD,GAD/B,CAApB;AAGA,SAAO;AAACW,IAAAA,KAAK,EAAE;AAACb,MAAAA;AAAD;AAAR,GAAP;AACD;AAID,eAAeD,IAAf","sourcesContent":["import { useRouter } from 'next/router';\r\nimport client from '../../client';\r\nimport Layout from '../../Components/Layout';\r\nimport BlockContent from '@sanity/block-content-to-react';\r\nimport groq from 'groq';\r\n\r\nconst Post = ({data}) => {\r\n  const router = useRouter()\r\n  const { pid } = router.query\r\n\r\nreturn (\r\n<Layout>\r\n<p>Title: {data.title}</p>\r\n<BlockContent\r\n  blocks = {data.body}\r\n  imageOptions={{w: 320, h:240, fit: 'max'}}\r\n  {...client.config}\r\n  />\r\n</Layout>\r\n)\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n  const{ pid = \"\" } = context.query;\r\n  const data =  await client.fetch(\r\n    '*[_type == \"post\" && slug.current == $pid][0]', {pid})  \r\n\r\n  return {props: {data}}\r\n}\r\n\r\n\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}