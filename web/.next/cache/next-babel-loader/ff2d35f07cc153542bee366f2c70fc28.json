{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\StevenDev\\\\Documents\\\\git\\\\Mhomepage\\\\web\\\\pages\\\\posts\\\\[pid].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport client from '../../client';\n\nvar Post = function Post(props) {\n  _s();\n\n  var router = useRouter();\n  var pid = router.query.pid; //console.log(props)\n\n  return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, \"Post: \", pid, \"  Title: \", props.title);\n};\n\n_s(Post, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Post;\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var _context$query$pid, pid;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context$query$pid = context.query.pid, pid = _context$query$pid === void 0 ? \"\" : _context$query$pid;\n            _context.next = 3;\n            return client.fetch('*[_type == \"post\" && slug.current == $pid][0]', {\n              pid\n            });\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/StevenDev/Documents/git/Mhomepage/web/pages/posts/[pid].js"],"names":["useRouter","client","Post","props","router","pid","query","title","getInitialProps","context","fetch"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAAA;;AACtB,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AADsB,MAEdK,GAFc,GAEND,MAAM,CAACE,KAFD,CAEdD,GAFc,EAGxB;;AACA,SAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUA,GAAV,eAAwBF,KAAK,CAACI,KAA9B,CAAR;AACC,CALD;;GAAML,I;UACWF,S;;;KADXE,I;;AAONA,IAAI,CAACM,eAAL;AAAA,sEAAuB,iBAAeC,OAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iCACHA,OAAO,CAACH,KADL,CACfD,GADe,EACfA,GADe,mCACT,EADS;AAAA;AAAA,mBAERJ,MAAM,CAACS,KAAP,CACX,+CADW,EACsC;AAACL,cAAAA;AAAD,aADtC,CAFQ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAeH,IAAf","sourcesContent":["import { useRouter } from 'next/router';\r\nimport client from '../../client';\r\n\r\n\r\nconst Post = (props) => {\r\n  const router = useRouter()\r\n  const { pid } = router.query\r\n//console.log(props)\r\nreturn (<p>Post: {pid}  Title: {props.title}</p>)\r\n}\r\n\r\nPost.getInitialProps = async function(context) {\r\n  const{pid = \"\"} = context.query;\r\n  return await client.fetch(\r\n    '*[_type == \"post\" && slug.current == $pid][0]', {pid})  \r\n}\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}